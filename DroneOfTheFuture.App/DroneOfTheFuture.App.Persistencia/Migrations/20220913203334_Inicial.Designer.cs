// <auto-generated />
using System;
using DroneOfTheFuture.App.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DroneOfTheFuture.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContexto))]
    [Migration("20220913203334_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ClienteEmpleado", b =>
                {
                    b.Property<int>("LosClientesId")
                        .HasColumnType("int");

                    b.Property<int>("empleadosId")
                        .HasColumnType("int");

                    b.HasKey("LosClientesId", "empleadosId");

                    b.HasIndex("empleadosId");

                    b.ToTable("ClienteEmpleado");
                });

            modelBuilder.Entity("DroneOfTheFuture.App.Dominio.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Identificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDeTelefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoPersona")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("DroneOfTheFuture.App.Dominio.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("HorasLaboradas")
                        .HasColumnType("int");

                    b.Property<string>("Identificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDeTelefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SuEmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("TipoPersona")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("SuEmpresaId");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("DroneOfTheFuture.App.Dominio.Historico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Satisfacioncliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SusEmpleadosId")
                        .HasColumnType("int");

                    b.Property<int?>("SusReportesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SusEmpleadosId");

                    b.HasIndex("SusReportesId");

                    b.ToTable("Historicos");
                });

            modelBuilder.Entity("DroneOfTheFuture.App.Dominio.Mensajeria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Drieccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Drones")
                        .HasColumnType("int");

                    b.Property<string>("EstadoDrone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NitEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmpresaDeMensajeria");
                });

            modelBuilder.Entity("DroneOfTheFuture.App.Dominio.Pedidos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("EstadoDelPedido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreDelPaquete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Peso")
                        .HasColumnType("int");

                    b.Property<int?>("SuCompradorId")
                        .HasColumnType("int");

                    b.Property<int?>("SuEmpresaDeMensajeriaId")
                        .HasColumnType("int");

                    b.Property<int?>("SuEncargadoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SuCompradorId");

                    b.HasIndex("SuEmpresaDeMensajeriaId");

                    b.HasIndex("SuEncargadoId");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("DroneOfTheFuture.App.Dominio.Reportes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("EstadoDrone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoPaquete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreDelReporte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemperaturaDelaZona")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("pedidosId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("pedidosId");

                    b.ToTable("Reporte");
                });

            modelBuilder.Entity("ClienteEmpleado", b =>
                {
                    b.HasOne("DroneOfTheFuture.App.Dominio.Cliente", null)
                        .WithMany()
                        .HasForeignKey("LosClientesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DroneOfTheFuture.App.Dominio.Empleado", null)
                        .WithMany()
                        .HasForeignKey("empleadosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DroneOfTheFuture.App.Dominio.Cliente", b =>
                {
                    b.HasOne("DroneOfTheFuture.App.Dominio.Cliente", null)
                        .WithMany("LosClientes")
                        .HasForeignKey("ClienteId");
                });

            modelBuilder.Entity("DroneOfTheFuture.App.Dominio.Empleado", b =>
                {
                    b.HasOne("DroneOfTheFuture.App.Dominio.Empleado", null)
                        .WithMany("empleados")
                        .HasForeignKey("EmpleadoId");

                    b.HasOne("DroneOfTheFuture.App.Dominio.Mensajeria", "SuEmpresa")
                        .WithMany("Empleados")
                        .HasForeignKey("SuEmpresaId");

                    b.Navigation("SuEmpresa");
                });

            modelBuilder.Entity("DroneOfTheFuture.App.Dominio.Historico", b =>
                {
                    b.HasOne("DroneOfTheFuture.App.Dominio.Empleado", "SusEmpleados")
                        .WithMany()
                        .HasForeignKey("SusEmpleadosId");

                    b.HasOne("DroneOfTheFuture.App.Dominio.Reportes", "SusReportes")
                        .WithMany()
                        .HasForeignKey("SusReportesId");

                    b.Navigation("SusEmpleados");

                    b.Navigation("SusReportes");
                });

            modelBuilder.Entity("DroneOfTheFuture.App.Dominio.Pedidos", b =>
                {
                    b.HasOne("DroneOfTheFuture.App.Dominio.Cliente", "SuComprador")
                        .WithMany("Compras")
                        .HasForeignKey("SuCompradorId");

                    b.HasOne("DroneOfTheFuture.App.Dominio.Mensajeria", "SuEmpresaDeMensajeria")
                        .WithMany()
                        .HasForeignKey("SuEmpresaDeMensajeriaId");

                    b.HasOne("DroneOfTheFuture.App.Dominio.Empleado", "SuEncargado")
                        .WithMany()
                        .HasForeignKey("SuEncargadoId");

                    b.Navigation("SuComprador");

                    b.Navigation("SuEmpresaDeMensajeria");

                    b.Navigation("SuEncargado");
                });

            modelBuilder.Entity("DroneOfTheFuture.App.Dominio.Reportes", b =>
                {
                    b.HasOne("DroneOfTheFuture.App.Dominio.Pedidos", "pedidos")
                        .WithMany()
                        .HasForeignKey("pedidosId");

                    b.Navigation("pedidos");
                });

            modelBuilder.Entity("DroneOfTheFuture.App.Dominio.Cliente", b =>
                {
                    b.Navigation("Compras");

                    b.Navigation("LosClientes");
                });

            modelBuilder.Entity("DroneOfTheFuture.App.Dominio.Empleado", b =>
                {
                    b.Navigation("empleados");
                });

            modelBuilder.Entity("DroneOfTheFuture.App.Dominio.Mensajeria", b =>
                {
                    b.Navigation("Empleados");
                });
#pragma warning restore 612, 618
        }
    }
}
